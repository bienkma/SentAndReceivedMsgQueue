---
# task deploy app, ui, queue kafka
- name: app
  hosts: 127.0.0.1
  user: root
  gather_facts: no
  vars:
    IP_HOST: "192.168.1.74" # IP address will be run the app, note: don't use 127.0.0.1
  tasks:
    - name: Install docker compose
      apt:
        name: docker-compose
        state: latest

    - name: Install git
      apt:
        name: git
        state: latest

    - name: git clone source code project for build ui and app image docker
      shell: |
        rm -rf /tmp/SentAndReceivedMsgQueue/
        git clone https://github.com/bienkma/SentAndReceivedMsgQueue.git /tmp/SentAndReceivedMsgQueue

    - name: build ui image docker
      shell: |
        cd /tmp/SentAndReceivedMsgQueue/compose/ui
        docker build -t ui .

    - name: build app image docker
      shell: |
        cd /tmp/SentAndReceivedMsgQueue/compose/app
        docker build -t app .

    - docker_service:
        project_name: app
        definition:
          version: '2'
          services:
            zookeeper:
             image: wurstmeister/zookeeper
             ports:
               - "2181:2181"

            kafka:
             image: wurstmeister/kafka:0.11.0.1
             ports:
               - "9092:9092"
             environment:
               KAFKA_ADVERTISED_HOST_NAME: "{{ IP_HOST }}"
               KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
               KAFKA_LOG_DIRS: "/kafka/logs"
             volumes:
               - "/var/run/docker.sock:/var/run/docker.sock"
             depends_on:
               - zookeeper
            app:
              image: app
              ports:
                - "8080:8080"
              environment:
                API_BIND_PORT: 8080
                BROKER_LIST_URL: "{{ IP_HOST }}:9092"
            ui:
              image: ui
              environment:
                TOPIC: roomchat
                API_SENDER_URL: "http://{{ IP_HOST }}:8080/apis/sender"
                API_RECEIVER_URL: "http://{{ IP_HOST }}:8080/apis/receiver?topic=roomchat"
      register: output
    - debug:
        var: output
